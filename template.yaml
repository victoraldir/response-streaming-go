AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Sample SAM Template for response-streaming-go
Resources:
  StreamingFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: mp4tostream/
      Handler: bootstrap
      Runtime: provided.al2023
      Architectures:
      - x86_64
      Timeout: 10
      FunctionUrlConfig:
        AuthType: AWS_IAM
        InvokeMode: RESPONSE_STREAM
  
  StreamingFunctionPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunctionUrl'
      FunctionName: !GetAtt StreamingFunction.Arn
      Principal: 'cloudfront.amazonaws.com'
      SourceArn: !Sub 'arn:${AWS::Partition}:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}'

  OriginAccessControl:
    Type: 'AWS::CloudFront::OriginAccessControl'
    Properties:
      OriginAccessControlConfig:
        Description: 'Origin Access Control for Streaming Lambda'
        Name: !Sub '${AWS::StackName}-OriginAccessControl'
        OriginAccessControlOriginType: 'lambda'
        SigningBehavior: 'always'
        SigningProtocol: 'sigv4'

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'

  CustomCachePolicy:
    Type: 'AWS::CloudFront::CachePolicy'
    Properties:
      CachePolicyConfig:
        Name: 'CustomCachePolicyWithQueryString'
        DefaultTTL: 86400
        MaxTTL: 31536000
        MinTTL: 0
        ParametersInCacheKeyAndForwardedToOrigin:
          EnableAcceptEncodingBrotli: false
          EnableAcceptEncodingGzip: true
          HeadersConfig:
            HeaderBehavior: 'none'
          CookiesConfig:
            CookieBehavior: 'none'
          QueryStringsConfig:
            QueryStringBehavior: 'whitelist'
            QueryStrings:
              - 'url'
  
  CloudFrontDistribution:
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig:
        Enabled: true
        Origins:
          - DomainName: !Sub
              - ${Url}
              - Url: !Join [ '', !Split [ '/', !Join [ '', !Split [ 'https://', !GetAtt StreamingFunctionUrl.FunctionUrl ] ] ] ] # Remove https:// and / at the end
            Id: 'lambdaOrigin'
            CustomOriginConfig:
              HTTPSPort: 443
              OriginProtocolPolicy: 'https-only'
              OriginKeepaliveTimeout: 5
              OriginReadTimeout: 30
              OriginSSLProtocols:
                - TLSv1.2
            OriginAccessControlId: !Ref OriginAccessControl
        DefaultCacheBehavior:
          Compress: true
          AllowedMethods:
            - HEAD
            - GET
          CachedMethods:
            - HEAD
            - GET
          TargetOriginId: 'lambdaOrigin'
          ViewerProtocolPolicy: 'redirect-to-https'
          CachePolicyId: !Ref CustomCachePolicy
        PriceClass: 'PriceClass_100'

Outputs:
  StreamingFunction:
    Description: Streaming Lambda Function ARN
    Value: !GetAtt StreamingFunction.Arn
  StreamingFunctionURL:
    Description: Streaming Lambda Function URL
    Value: !GetAtt StreamingFunctionUrl.FunctionUrl
  UrlWithoutProtocol:
    Description: Streaming Lambda Function URL without protocol and / at the end
    Value: !Sub 
      - ${Url}
      - Url: !Join [ '', !Split [ '/', !Join [ '', !Split [ 'https://', !GetAtt StreamingFunctionUrl.FunctionUrl ] ] ] ]
  CloudFrontDistribution:
    Description: CloudFront Distribution Domain Name
    Value: !GetAtt CloudFrontDistribution.DomainName
# # More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Tracing: Active
    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON
  Api:
    TracingEnabled: true
